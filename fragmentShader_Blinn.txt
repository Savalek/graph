varying vec3 N;
varying vec3 v;    
varying vec2 texture_coordinate; 

uniform sampler2D my_color_texture;

void main (void)  
{  
   gl_FragColor = gl_FrontLightModelProduct.sceneColor;
   vec3 E = normalize(-v);
   vec3 l, h;
   
   for (int i = 0; i < 3; i++) {
       l = normalize(gl_LightSource[i].position.xyz - v);
       h = normalize ( l + v );

       vec4 Iamb = gl_FrontLightProduct[i].ambient;     
       vec4 Idiff = gl_FrontLightProduct[i].diffuse * max(dot(N,l), 0.0);    
       vec4 Ispec = gl_FrontLightProduct[i].specular 
                    * pow(max(dot(N,h),0.0), gl_FrontMaterial.shininess);

       gl_FragColor += Iamb + Idiff + Ispec;
   }
   // gl_FragColor *= texture2D(my_color_texture, texture_coordinate);
}